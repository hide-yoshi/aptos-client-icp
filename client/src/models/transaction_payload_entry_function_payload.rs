/*
 * Aptos Node API
 *
 * The Aptos Node API is a RESTful API for client applications to interact with the Aptos blockchain.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionPayloadEntryFunctionPayload {
    /// Entry function id is string representation of a entry function defined on-chain.  Format: `{address}::{module name}::{function name}`  Both `module name` and `function name` are case-sensitive. 
    #[serde(rename = "function")]
    pub function: String,
    /// Type arguments of the function
    #[serde(rename = "type_arguments")]
    pub type_arguments: Vec<String>,
    /// Arguments of the function
    #[serde(rename = "arguments")]
    pub arguments: Vec<serde_json::Value>,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl TransactionPayloadEntryFunctionPayload {
    pub fn new(function: String, type_arguments: Vec<String>, arguments: Vec<serde_json::Value>, r#type: Type) -> TransactionPayloadEntryFunctionPayload {
        TransactionPayloadEntryFunctionPayload {
            function,
            type_arguments,
            arguments,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "entry_function_payload")]
    EntryFunctionPayload,
}

impl Default for Type {
    fn default() -> Type {
        Self::EntryFunctionPayload
    }
}

