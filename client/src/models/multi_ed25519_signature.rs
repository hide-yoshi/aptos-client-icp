/*
 * Aptos Node API
 *
 * The Aptos Node API is a RESTful API for client applications to interact with the Aptos blockchain.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MultiEd25519Signature : A Ed25519 multi-sig signature  This allows k-of-n signing for a transaction
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MultiEd25519Signature {
    /// The public keys for the Ed25519 signature
    #[serde(rename = "public_keys")]
    pub public_keys: Vec<String>,
    /// Signature associated with the public keys in the same order
    #[serde(rename = "signatures")]
    pub signatures: Vec<String>,
    /// The number of signatures required for a successful transaction
    #[serde(rename = "threshold")]
    pub threshold: i32,
    /// All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte.  Unlike the `Address` type, HexEncodedBytes will not trim any zeros. 
    #[serde(rename = "bitmap")]
    pub bitmap: String,
}

impl MultiEd25519Signature {
    /// A Ed25519 multi-sig signature  This allows k-of-n signing for a transaction
    pub fn new(public_keys: Vec<String>, signatures: Vec<String>, threshold: i32, bitmap: String) -> MultiEd25519Signature {
        MultiEd25519Signature {
            public_keys,
            signatures,
            threshold,
            bitmap,
        }
    }
}

