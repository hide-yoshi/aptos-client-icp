/*
 * Aptos Node API
 *
 * The Aptos Node API is a RESTful API for client applications to interact with the Aptos blockchain.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountSignatureMultiKeySignature {
    #[serde(rename = "public_keys")]
    pub public_keys: Vec<models::PublicKey>,
    #[serde(rename = "signatures")]
    pub signatures: Vec<models::IndexedSignature>,
    #[serde(rename = "signatures_required")]
    pub signatures_required: i32,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl AccountSignatureMultiKeySignature {
    pub fn new(public_keys: Vec<models::PublicKey>, signatures: Vec<models::IndexedSignature>, signatures_required: i32, r#type: Type) -> AccountSignatureMultiKeySignature {
        AccountSignatureMultiKeySignature {
            public_keys,
            signatures,
            signatures_required,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "multi_key_signature")]
    MultiKeySignature,
}

impl Default for Type {
    fn default() -> Type {
        Self::MultiKeySignature
    }
}

