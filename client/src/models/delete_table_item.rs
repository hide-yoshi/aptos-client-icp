/*
 * Aptos Node API
 *
 * The Aptos Node API is a RESTful API for client applications to interact with the Aptos blockchain.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DeleteTableItem : Delete a table item
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeleteTableItem {
    #[serde(rename = "state_key_hash")]
    pub state_key_hash: String,
    /// All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte.  Unlike the `Address` type, HexEncodedBytes will not trim any zeros. 
    #[serde(rename = "handle")]
    pub handle: String,
    /// All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte.  Unlike the `Address` type, HexEncodedBytes will not trim any zeros. 
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Box<models::DeletedTableData>>,
}

impl DeleteTableItem {
    /// Delete a table item
    pub fn new(state_key_hash: String, handle: String, key: String) -> DeleteTableItem {
        DeleteTableItem {
            state_key_hash,
            handle,
            key,
            data: None,
        }
    }
}

