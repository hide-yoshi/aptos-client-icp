/*
 * Aptos Node API
 *
 * The Aptos Node API is a RESTful API for client applications to interact with the Aptos blockchain.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DeleteResource : Delete a resource
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeleteResource {
    /// A hex encoded 32 byte Aptos account address.  This is represented in a string as a 64 character hex string, sometimes shortened by stripping leading 0s, and adding a 0x.  For example, address 0x0000000000000000000000000000000000000000000000000000000000000001 is represented as 0x1. 
    #[serde(rename = "address")]
    pub address: String,
    /// State key hash
    #[serde(rename = "state_key_hash")]
    pub state_key_hash: String,
    /// String representation of a MoveStructTag (on-chain Move struct type). This exists so you can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.  It is a combination of:   1. `move_module_address`, `module_name` and `struct_name`, all joined by `::`   2. `struct generic type parameters` joined by `, `  Examples:   * `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>`   * `0x1::account::Account`  Note:   1. Empty chars should be ignored when comparing 2 struct tag ids.   2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).  See [doc](https://aptos.dev/concepts/accounts) for more details. 
    #[serde(rename = "resource")]
    pub resource: String,
}

impl DeleteResource {
    /// Delete a resource
    pub fn new(address: String, state_key_hash: String, resource: String) -> DeleteResource {
        DeleteResource {
            address,
            state_key_hash,
            resource,
        }
    }
}

