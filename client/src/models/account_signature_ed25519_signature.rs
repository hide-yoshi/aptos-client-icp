/*
 * Aptos Node API
 *
 * The Aptos Node API is a RESTful API for client applications to interact with the Aptos blockchain.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountSignatureEd25519Signature {
    /// All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte.  Unlike the `Address` type, HexEncodedBytes will not trim any zeros. 
    #[serde(rename = "public_key")]
    pub public_key: String,
    /// All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte.  Unlike the `Address` type, HexEncodedBytes will not trim any zeros. 
    #[serde(rename = "signature")]
    pub signature: String,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl AccountSignatureEd25519Signature {
    pub fn new(public_key: String, signature: String, r#type: Type) -> AccountSignatureEd25519Signature {
        AccountSignatureEd25519Signature {
            public_key,
            signature,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "ed25519_signature")]
    Ed25519Signature,
}

impl Default for Type {
    fn default() -> Type {
        Self::Ed25519Signature
    }
}

